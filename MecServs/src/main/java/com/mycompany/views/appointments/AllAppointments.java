/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.views.appointments;

import com.mycompany.impl.CarroDaoImpl;
import com.mycompany.mecservs.Dashboard;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sirval
 */
public class AllAppointments extends javax.swing.JPanel {

    /**
     * Creates new form AllAppointments
     */
    public AllAppointments() {
        initComponents();
        initStyles();
        renderContent(new TableAllAppointments());
        filter();
    }
    
    private void initStyles(){
        message.putClientProperty("FlatLaf.style", "font: 22 $light.font");
        message.setForeground(Color.BLACK);
        btnAdicionarAgendamento.setForeground(Color.BLACK);
    }
    
    private void renderContent(JPanel p){
        p.setSize(738, 367);
        p.setLocation(0,0);
        
        panelContent.removeAll();
        panelContent.add(p, BorderLayout.CENTER);
        panelContent.revalidate();
        panelContent.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        message = new javax.swing.JLabel();
        btnAdicionarAgendamento = new javax.swing.JToggleButton();
        panelContent = new javax.swing.JPanel();
        filtarAgendamentos = new javax.swing.JComboBox<>();
        mesagemAlerta = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        message.setText("Agendamentos");

        btnAdicionarAgendamento.setText("ADICONAR AGENDAMENTO");
        btnAdicionarAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarAgendamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelContentLayout = new javax.swing.GroupLayout(panelContent);
        panelContent.setLayout(panelContentLayout);
        panelContentLayout.setHorizontalGroup(
            panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        panelContentLayout.setVerticalGroup(
            panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );

        filtarAgendamentos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "AGENDADOS", "EM EXECUCAO", "FINALIZADOS" }));

        mesagemAlerta.setBackground(new java.awt.Color(255, 255, 255));
        mesagemAlerta.setForeground(new java.awt.Color(255, 0, 0));
        mesagemAlerta.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mesagemAlerta.setText("*");
        mesagemAlerta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mesagemAlertaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mesagemAlertaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 296, Short.MAX_VALUE)
                .addComponent(filtarAgendamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(mesagemAlerta, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdicionarAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filtarAgendamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(panelContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mesagemAlerta, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarAgendamentoActionPerformed
        Dashboard.ShowJPanel(new AddNewAppointment());
    }//GEN-LAST:event_btnAdicionarAgendamentoActionPerformed

    private void mesagemAlertaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mesagemAlertaMouseEntered
        this.mesagemAlerta.setText("     Para alterar o status, selecione o filtro TODOS.");
        this.mesagemAlerta.putClientProperty( "FlatLaf.style", "font: 14 $light.font" );
        this.mesagemAlerta.setHorizontalAlignment(SwingConstants.LEFT);
    }//GEN-LAST:event_mesagemAlertaMouseEntered

    private void mesagemAlertaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mesagemAlertaMouseExited
        this.mesagemAlerta.setText("*");
        this.mesagemAlerta.setHorizontalAlignment(SwingConstants.LEFT);
    }//GEN-LAST:event_mesagemAlertaMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAdicionarAgendamento;
    private javax.swing.JComboBox<String> filtarAgendamentos;
    private javax.swing.JLabel mesagemAlerta;
    private javax.swing.JLabel message;
    private javax.swing.JPanel panelContent;
    // End of variables declaration//GEN-END:variables

    private void filter() {
        filtarAgendamentos.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Obter o valor selecionado
                String selecionado = (String) filtarAgendamentos.getSelectedItem();
                
                if(selecionado.equals("TODOS")){
                    renderContent(new TableAllAppointments());
                }
                if(selecionado.equals("AGENDADOS")){
                    renderContent(new TableAllScheduled());
                }
                if(selecionado.equals("EM EXECUCAO")){
                    renderContent(new TableAllExecution());
                }
                if(selecionado.equals("FINALIZADOS")){
                    renderContent(new TableAllFinish());
                }
            }
        });
    }

}
